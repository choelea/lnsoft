/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.whjbsoft.www.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.whjbsoft.www.form.YgglForm;
import com.whjbsoft.www.po.Ygxx;
import com.whjbsoft.www.service.YgxxService;
import com.whjbsoft.www.servicei.YgxxServicei;
import com.whjbsoft.www.util.Contants_st;
import com.whjbsoft.www.util.FormateDate;
import com.whjbsoft.www.util.Pageinfo;

/** 
 * MyEclipse Struts
 * Creation date: 11-27-2009
 * 
 * XDoclet definition:
 * @struts.action path="/yggl" name="ygglForm" parameter="method" scope="request"
 * @struts.action-forward name="updatePage" path="/jsp/sudent/zygl/ygxx_update.jsp"
 * @struts.action-forward name="listPage" path="/jsp/student/zygl/ygxx_list"
 * @struts.action-forward name="getList" path="/yggl.do?method=getList"
 * @struts.action-forward name="addPage" path="/jsp/student/zygl/ygxx_add.jsp"
 */
public class YgglAction extends DispatchAction {
	
	private YgxxService service ;
	
	

	/**
	 * 
	 */
	public YgglAction() {
		setService(new YgxxServicei());
	}
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward getList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			YgglForm ygglForm = (YgglForm) form;
			int djzj = (Integer) request.getSession()
					.getAttribute("userDjxxzj");
			String page = request.getParameter("page");
			if (page == null || "".equals(page)) {
				page = "1";
			}
			Integer userPk = (Integer) request.getSession().getAttribute(
					"userPk");
			Integer userSyszzj = (Integer) request.getSession().getAttribute(
					"userSyszzj");
			String rmMsg = request.getParameter("rmMsg");
			if ("true".equals(rmMsg)) {
				request.getSession().removeAttribute("queryMsg");
				request.getSession().removeAttribute("fieldName");
				request.getSession().removeAttribute("fieldValue");
			}
			String con = (String) request.getSession().getAttribute("queryMsg");
			if (con != null) {
				String fieldValue = (String) request.getSession().getAttribute(
						"fieldValue");
				String fieldName = (String) request.getSession().getAttribute(
						"fieldName");
				if ("ygzt".equals(fieldName)) {
					if ("空闲".equals(fieldValue)) {
						fieldValue = "0";
						ygglForm.setFieldValue("空闲");
					} else if ("忙碌".equals(fieldValue)) {
						fieldValue = "1";
						ygglForm.setFieldValue("忙碌");
					}
				}
				ygglForm.setFieldName(fieldName);
				Pageinfo pageinfo = this.getService().getPagedata(con, djzj,
						Contants_st.yg_query,  Integer.parseInt(page), userPk,userSyszzj,"%" + fieldValue + "%");
				request.setAttribute("pageinfo", pageinfo);
			} else {
				Pageinfo pageinfo = this.getService().getPagedata("", djzj,
						0, Integer.parseInt(page), userPk,userSyszzj);
				request.setAttribute("pageinfo", pageinfo);
			}
			this.saveToken(request);
			return mapping.findForward("listPage");
	}
	
	public ActionForward queryList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			StringBuffer sb = new StringBuffer();
			String fieldName = request.getParameter("fieldName");
			String fieldValue = request.getParameter("fieldValue");
			if (fieldName != null && !"".equals(fieldName)
					&& fieldValue != null && !"".equals(fieldValue)) {
				sb.append(" and ").append(fieldName).append(" like ?");
				request.getSession().setAttribute("fieldName", fieldName);
				request.getSession().setAttribute("fieldValue", fieldValue);
				request.getSession().setAttribute("queryMsg", sb.toString());
			} else {
				request.getSession().removeAttribute("queryMsg");
				request.getSession().removeAttribute("fieldName");
				request.getSession().removeAttribute("fieldValue");
			}
			return mapping.findForward("getList");
	}
	public ActionForward goAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			YgglForm ygglForm = (YgglForm) form;
			ygglForm .getVo().setYgbh(FormateDate.formate("YG"));
			ygglForm .getVo().setYgxb("男");
			this.saveToken(request);
			return mapping.findForward("addPage");
	}
	public ActionForward saveObject(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			YgglForm ygglForm = (YgglForm) form;
			int djzj = (Integer) request.getSession()
					.getAttribute("userDjxxzj");
			if (this.isTokenValid(request)) {
				Ygxx vo = ygglForm.getVo();
				boolean flag = this.getService().save(djzj, Contants_st.yg_add,vo);
				String msg = flag ? "员工信息添加成功！" : "员工信息添加失败！";
				request.setAttribute("msg", msg);
				this.resetToken(request);
			}
//			防止搜索栏填入了信息而返回页面无法显示刚刚添加的信息
			request.getSession().removeAttribute("queryMsg");
			request.getSession().removeAttribute("fieldName");
			request.getSession().removeAttribute("fieldValue");
			return mapping.findForward("getList");
	}
	
	public ActionForward goUpdate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			YgglForm ygglForm = (YgglForm) form;
			String pk = request.getParameter("pk");
			Ygxx vo = this.getService().getYgxx(Integer.parseInt(pk));
			ygglForm.setVo(vo);
			this.saveToken(request);
			return mapping.findForward("updatePage");
	}
	public ActionForward updateObject(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			YgglForm ygglForm = (YgglForm) form;
			int djzj = (Integer) request.getSession()
					.getAttribute("userDjxxzj");
			if (this.isTokenValid(request)) {
				Ygxx vo = ygglForm.getVo();
				boolean flag = this.getService().update(djzj, Contants_st.yg_upd,  vo);
				String msg = flag ? "员工信息更新成功！" : "员工信息更新失败！";
				request.setAttribute("msg", msg);
				this.saveToken(request);
			}
			return mapping.findForward("getList");
	}
	public ActionForward viewObject(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			YgglForm ygglForm = (YgglForm) form;
			String pk = request.getParameter("pk");
			Ygxx vo = this.getService().getYgxx(Integer.parseInt(pk));
			ygglForm.setVo(vo);
			return mapping.findForward("viewPage");
	}
	public ActionForward delObject(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			int djzj = (Integer) request.getSession()
					.getAttribute("userDjxxzj");
			String[] pk = request.getParameterValues("pk");
			if (this.isTokenValid(request)) {
				boolean flag = this.getService().delYgxx(djzj, Contants_st.yg_del,  pk);
				String msg = flag ? "员工信息删除成功！" : "员工信息删除失败！";
				request.setAttribute("msg", msg);
				this.resetToken(request);
			}
			//防止搜索栏填入了信息而返回页面无法显示刚刚添加的信息
			request.getSession().removeAttribute("queryMsg");
			request.getSession().removeAttribute("fieldName");
			request.getSession().removeAttribute("fieldValue");
			return mapping.findForward("getList");
	}
	/**
	 * @return the service
	 */
	public YgxxService getService() {
		return service;
	}
	/**
	 * @param service the service to set
	 */
	public void setService(YgxxService service) {
		this.service = service;
	}
}