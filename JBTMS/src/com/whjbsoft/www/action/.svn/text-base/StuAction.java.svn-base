/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.whjbsoft.www.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.upload.FormFile;

import com.whjbsoft.www.form.StuForm;
import com.whjbsoft.www.po.Bjxx;
import com.whjbsoft.www.po.Xsxx;
import com.whjbsoft.www.service.XsglService;
import com.whjbsoft.www.servicei.XsglServicei;
import com.whjbsoft.www.util.Pageinfo;

/**
 * MyEclipse Struts Creation date: 09-25-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/stu" name="stuForm" parameter="metod" scope="request"
 * @struts.action-forward name="updatePage" path="/jsp/teacher/stu_update.jsp"
 * @struts.action-forward name="listPage" path="/jsp/teacher/stu_list.jsp"
 * @struts.action-forward name="viewPage" path="/jsp/teacher/stu_view.jsp"
 * @struts.action-forward name="getList" path="/stu.do?method=getList"
 * @struts.action-forward name="addPage" path="/jsp/teacher/stu_add.jsp"
 */
public class StuAction extends DispatchAction {

	private XsglService service;

	public StuAction() {
		service = new XsglServicei();
	}

	public ActionForward getList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			String curpage = request.getParameter("page");
			if (curpage == null || "".equals(curpage)) {
				curpage = "1";
			}
			String bjzj = request.getParameter("bjzj");
			if (bjzj == null) {
				bjzj = (String) request.getAttribute("bjzj");
			}
			String rmMsg = request.getParameter("rmMsg");
			if("true".equals(rmMsg)) {
				request.getSession().removeAttribute("queryMsg");
				request.getSession().removeAttribute("fieldName");
				request.getSession().removeAttribute("fieldValue");
			}
			String con = " and A.bjxx.bjzj = ?";
			String connect = (String) request.getSession().getAttribute("queryMsg");
			Pageinfo pageinfo = null;
			if (connect != null) {
				StuForm studentForm = (StuForm) form;
				String fieldName = (String) request.getSession().getAttribute("fieldName");
				String fieldValue = (String) request.getSession().getAttribute("fieldValue");
				studentForm.setFieldName(fieldName);
				studentForm.setFieldValue(fieldValue);
				pageinfo = this.getService().getPagedata(
						con + connect, Integer.parseInt(curpage),bjzj,"%" + fieldValue + "%");
				request.setAttribute("pageinfo", pageinfo);
			} else {
				pageinfo = this.getService().getPagedata(con,Integer.parseInt(curpage),bjzj);
				request.setAttribute("pageinfo", pageinfo);
			}
			request.setAttribute("pageinfo", pageinfo);
			request.setAttribute("bjzj", bjzj);
			this.saveToken(request);
			request.setAttribute("page", curpage);
			return mapping.findForward("listPage");
	}

	public ActionForward goAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			this.saveToken(request);
			String sign = request.getParameter("sign");
			String bjzj = request.getParameter("bjzj");
			request.setAttribute("bjzj", bjzj);
			StuForm xsglForm = (StuForm) form;
			String bjbh = this.getService().getBjgl(Integer.parseInt(bjzj))
					.getBjbh();
			xsglForm.getVo().setXsxh(bjbh);
			request.setAttribute("page", request.getParameter("page"));
			if ("1".equals(sign)) {
				return mapping.findForward("addYgPage");
			} else {
				return mapping.findForward("addPlPage");
			}
	}
	
	public ActionForward queryList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			StringBuffer sb = new StringBuffer();
			String fieldName = request.getParameter("fieldName");
			String fieldValue = request.getParameter("fieldValue");
			if (fieldName != null && !"".equals(fieldName)
					&& fieldValue != null && !"".equals(fieldValue)) {
				sb.append(" and A.").append(fieldName).append(" like ?");
				request.getSession().setAttribute("fieldName", fieldName);
				request.getSession().setAttribute("fieldValue", fieldValue);
				request.getSession().setAttribute("queryMsg", sb.toString());
			} else {
				request.getSession().removeAttribute("queryMsg");
				request.getSession().removeAttribute("fieldName");
				request.getSession().removeAttribute("fieldValue");
			}
			return mapping.findForward("getList");
	}

	public ActionForward saveMoreObject(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			String bjzj = request.getParameter("bjzj");
			
			if (isTokenValid(request)) {
				StuForm xsglForm = (StuForm) form;
				Xsxx xsgl = xsglForm.getVo();
				xsgl.setXsxh(xsgl.getXsxh());
				boolean flag = this.getService().save(xsgl,
						Integer.parseInt(bjzj), xsglForm.getZcsl());
				request.setAttribute("msg", flag ? "添加学生成功！" : "添加学生失败！");
				this.resetToken(request);
			}
			request.setAttribute("bjzj", bjzj);
			return mapping.findForward("getList");
	}

	public ActionForward goUpdate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			StuForm xsglForm = (StuForm) form;
			String pk = request.getParameter("pk");
			String bjzj = request.getParameter("bjzj");
			Xsxx xsgl = this.getService().getXsgl(Integer.parseInt(pk));
			xsglForm.setVo(xsgl);
			this.saveToken(request);
			request.setAttribute("bjxx", this.getService().getBjgl(Integer.parseInt(bjzj)));
			request.setAttribute("bjzj", bjzj);
			request.setAttribute("page", request.getParameter("page"));
			return mapping.findForward("updatePage");
	}

	public ActionForward updateObject(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String bjzj = request.getParameter("bjzj");
		if (isTokenValid(request)) {
			StuForm xsglForm = (StuForm) form;
			Xsxx xsgl = xsglForm.getVo();
			Bjxx bjgl = this.getService().getBjgl(Integer.parseInt(bjzj));
			xsgl.setBjxx(bjgl);
			boolean flag = this.getService().update(xsgl);
			request.setAttribute("msg", flag ? "学生信息修改成功！" : "学生信息修改失败！");
			this.resetToken(request);
		}
		request.setAttribute("bjzj", bjzj);
		return mapping.findForward("getList");
	}
	
	public ActionForward updYxbj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			String bjzj = request.getParameter("bjzj");
			String stuPk = request.getParameter("stuPk");
			String state = request.getParameter("state");
			this.getService().updYxbj(Integer.parseInt(stuPk),
					Integer.parseInt(state));
			request.setAttribute("bjzj", bjzj);
			return mapping.findForward("getList");
		}

	public ActionForward delObject(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			String bjzj = request.getParameter("bjzj");
			if (isTokenValid(request)) {
				String[] pk = request.getParameterValues("pk");
				boolean flag = this.getService().delXsgl(pk);
				request.setAttribute("msg", flag ? "删除学生信息成功！" : "删除学生信息失败！");
			}
			request.setAttribute("bjzj", bjzj);
			return mapping.findForward("getList");
		}

	public ActionForward viewObject(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
			StuForm xsglForm = (StuForm) form;
			String bjzj = request.getParameter("bjzj");
			String pk = request.getParameter("pk");
			Xsxx xsgl = this.getService().getXsgl(Integer.parseInt(pk));
			xsglForm.setVo(xsgl);
			request.setAttribute("bjxx", this.getService().getBjgl(Integer.parseInt(bjzj)));
			request.setAttribute("bjzj", request.getParameter("bjzj"));
			request.setAttribute("page", request.getParameter("page"));
			return mapping.findForward("viewPage");
		}
	public ActionForward gotoDr(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
			String bjzj = request.getParameter("bjzj");	
			if(bjzj==null){
				return null;
			}else{
				this.saveToken(request);
				request.setAttribute("bjzj", bjzj);
				return mapping.findForward("gotoDr");
			}
	}
	public ActionForward importStu(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response){
			StuForm xsglForm = (StuForm)form;
			String bjzj = request.getParameter("bjzj");
			if(this.isTokenValid(request)){
				FormFile file = xsglForm.getFile();
				if("application/vnd.ms-excel".equals(file.getContentType())){
					try {
						boolean flag = this.getService().importStu(file.getInputStream(),Integer.valueOf(bjzj));
						request.setAttribute("msg",flag?"导入成功!":"导入失败!");
					}catch (Exception e) {
						e.printStackTrace();
						request.setAttribute("msg","导入失败!");
					}
				}else {
					request.setAttribute("msg","源文件正在使用或源文件不是Excel格式!");
				}
				this.resetToken(request);
			}
			return mapping.findForward("getList");
		}

	/**
	 * @return the service
	 */
	public XsglService getService() {
		return service;
	}

	/**
	 * @param service
	 *            the service to set
	 */
	public void setService(XsglService service) {
		this.service = service;
	}
}